{
  "permissions": {
    "allow": [
      "Read(//c/Users/DICA/**)",
      "Bash(npx @modelcontextprotocol/inspector:*)",
      "Bash(dir:*)",
      "Bash(test:*)",
      "Bash(npm install:*)",
      "Bash(if not exist \"src\\config\" mkdir \"src\\config\")",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat(abm): Add Firebase configuration and TypeScript types\n\n- Install Firebase SDK and uuid packages\n- Add .env.local.example with Firebase config template\n- Create src/config/firebase.ts for Firestore, Auth, Storage initialization\n- Create src/types/gallery.types.ts with comprehensive TypeScript interfaces\n- Add firestore.rules and storage.rules with admin-only write access\n- Configure admin email: tecnofusion.it@gmail.com\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat(abm): Implement Firebase Authentication system\n\n- Create src/services/auth.service.ts with sign in/out and password reset\n- Create src/stores/auth.ts Pinia store for auth state management\n- Create src/middleware/auth.guard.ts with authGuard, adminGuard, guestGuard\n- Create src/composables/useAuth.ts for reactive auth operations\n- Create src/components/auth/LoginForm.vue with email/password form\n- Create src/views/admin/AdminLogin.vue with branded login page\n- Update src/router/index.ts with admin routes and auth guards\n- Admin routes: /admin/login, /admin/dashboard, /admin/gallery\n- Protect admin routes with adminGuard middleware\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
