{
  "permissions": {
    "allow": [
      "Read(//c/Users/DICA/**)",
      "Bash(npx @modelcontextprotocol/inspector:*)",
      "Bash(dir:*)",
      "Bash(test:*)",
      "Bash(npm install:*)",
      "Bash(if not exist \"src\\config\" mkdir \"src\\config\")",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat(abm): Add Firebase configuration and TypeScript types\n\n- Install Firebase SDK and uuid packages\n- Add .env.local.example with Firebase config template\n- Create src/config/firebase.ts for Firestore, Auth, Storage initialization\n- Create src/types/gallery.types.ts with comprehensive TypeScript interfaces\n- Add firestore.rules and storage.rules with admin-only write access\n- Configure admin email: tecnofusion.it@gmail.com\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat(abm): Implement Firebase Authentication system\n\n- Create src/services/auth.service.ts with sign in/out and password reset\n- Create src/stores/auth.ts Pinia store for auth state management\n- Create src/middleware/auth.guard.ts with authGuard, adminGuard, guestGuard\n- Create src/composables/useAuth.ts for reactive auth operations\n- Create src/components/auth/LoginForm.vue with email/password form\n- Create src/views/admin/AdminLogin.vue with branded login page\n- Update src/router/index.ts with admin routes and auth guards\n- Admin routes: /admin/login, /admin/dashboard, /admin/gallery\n- Protect admin routes with adminGuard middleware\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat(abm): Create Firestore and Storage services with CRUD\n\n- Create src/services/firestore.service.ts with full CRUD operations\n  * Create, read, update, delete gallery items\n  * Featured items management (max 4)\n  * Batch order index updates for drag & drop\n  * Statistics and search functionality\n- Create src/services/storage.service.ts for image handling\n  * Upload images to Firebase Storage with progress tracking\n  * File validation (type, size limits)\n  * Image compression client-side\n  * Delete images from storage\n- Create src/stores/gallery.ts Pinia store for state management\n  * Reactive state for items, featured, stats\n  * Actions for all CRUD operations\n  * Local state updates synchronized with Firestore\n- Create src/composables/useGallery.ts reactive composable\n- Create src/composables/useFileUpload.ts for upload operations\n  * Progress tracking and error handling\n  * File validation and compression utilities\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
